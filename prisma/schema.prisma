// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  username      String?   @unique
  bio           String?
  password      String
  accounts      Account[]
  sessions      Session[]
  spaces        Space[]
  likes         Like[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Space {
  id          String   @id @default(cuid())
  title       String
  subtitle    String
  description String?
  repository  String?
  repoIcon    String?
  url         String
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  runtime     String
  category    String
  visibility  String   @default("public")
  gradient    String?  // プリセットまたはカスタムグラデーション
  startColor  String?  // カスタムグラデーションの開始色
  endColor    String?  // カスタムグラデーションの終了色
  likes       Like[]
  clicks      Click[]
  createdAt   DateTime @default(now())
}

model Like {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  space     Space    @relation(fields: [spaceId], references: [id])
  spaceId   String
  createdAt DateTime @default(now())

  @@unique([userId, spaceId])
}

model Click {
  id        String   @id @default(cuid())
  space     Space    @relation(fields: [spaceId], references: [id])
  spaceId   String
  createdAt DateTime @default(now())

  @@index([spaceId])
}
